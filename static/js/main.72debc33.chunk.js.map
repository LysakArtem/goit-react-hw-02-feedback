{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification.js","components/Section.js","App.js","index.js"],"names":["FeedbackOptions","onLeaveFeedback","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","Section","title","children","App","state","totalFeedback","addFeedback","options","setState","prev","this","countTotalFeedback","className","Math","round","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAGe,SAASA,EAAT,GAA+C,IAApBC,EAAmB,EAAnBA,gBACxC,OACE,qCAEE,wBACEC,KAAK,SACLC,QAAS,WACPF,EAAgB,SAHpB,kBAQA,wBACEC,KAAK,SACLC,QAAS,WACPF,EAAgB,YAHpB,qBAQA,wBACEC,KAAK,SACLC,QAAS,WACPF,EAAgB,QAHpB,oBCpBS,SAASG,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,qCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,WCbS,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,4BAAIA,ICDE,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,gCACGD,GAAS,6BAAKA,IACdC,K,ICmDQC,E,4MAnDbC,MAAQ,CACNX,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPU,cAAgB,K,EAahBC,YAAc,SAACC,GACb,EAAKC,UAAS,SAACC,GAAD,sBAAcF,EAAUE,EAAKF,GAAW,O,mEAXlC,IAAD,EACYG,KAAKN,MAA5BX,EADW,EACXA,KAAMC,EADK,EACLA,QAASC,EADJ,EACIA,IACvBe,KAAKL,cAAgBZ,EAAOC,EAAUC,I,wDAGtC,OAAOe,KAAKL,cACPK,KAAKN,MAAMX,KAAOiB,KAAKL,cAAiB,IACzC,I,+BAUJ,OAFAK,KAAKC,qBAGH,sBAAKC,UAAU,MAAf,UACE,cAACZ,EAAD,CAASC,MAAM,wBAAf,SACE,cAACb,EAAD,CAAiBC,gBAAiBqB,KAAKJ,gBAEzC,cAACN,EAAD,CAASC,MAAM,aAAf,SACGS,KAAKL,cACJ,cAACb,EAAD,CACEC,KAAMiB,KAAKN,MAAMX,KACjBC,QAASgB,KAAKN,MAAMV,QACpBC,IAAKe,KAAKN,MAAMT,IAChBC,MAAOc,KAAKL,cACZR,mBACEgB,KAAKC,MAA+C,IAAzCJ,KAAKK,mCAA2C,MAI/D,cAACjB,EAAD,CAAcC,QAAQ,+B,GA5ChBiB,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.72debc33.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n// import s from './FriendList.module.css';\r\n// import FriendListItem from './../FriendListItem/FriendListItem';\r\nexport default function FeedbackOptions({ onLeaveFeedback }) {\r\n  return (\r\n    <>\r\n      {/* <h1>Please leave feedback</h1> */}\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => {\r\n          onLeaveFeedback('good');\r\n        }}\r\n      >\r\n        Good\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => {\r\n          onLeaveFeedback('neutral');\r\n        }}\r\n      >\r\n        Neutral\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => {\r\n          onLeaveFeedback('bad');\r\n        }}\r\n      >\r\n        Bad\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// import s from './FriendList.module.css';\r\n// import FriendListItem from './../FriendListItem/FriendListItem';\r\nexport default function Statistics({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n}) {\r\n  return (\r\n    <>\r\n      <p>Good: {good}</p>\r\n      <p>Neutral: {neutral}</p>\r\n      <p>Bad: {bad}</p>\r\n      <p>Total: {total}</p>\r\n      <p>Positive Feedback: {positivePercentage} %</p>\r\n    </>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// import s from './FriendList.module.css';\r\n// import FriendListItem from './../FriendListItem/FriendListItem';\r\nexport default function Notification({ message }) {\r\n  return <p>{message}</p>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// import s from './FriendList.module.css';\r\n// import FriendListItem from './../FriendListItem/FriendListItem';\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <div>\r\n      {title && <h2>{title}</h2>}\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n","import React, { Component } from 'react';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification';\nimport Section from './components/Section';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  totalFeedback = null;\n  // let  positiveFeedback =null;\n\n  countTotalFeedback() {\n    const { good, neutral, bad } = this.state;\n    this.totalFeedback = good + neutral + bad;\n  }\n  countPositiveFeedbackPercentage() {\n    return this.totalFeedback\n      ? (this.state.good / this.totalFeedback) * 100\n      : 0;\n  }\n\n  addFeedback = (options) => {\n    this.setState((prev) => ({ [options]: prev[options] + 1 }));\n  };\n\n  render() {\n    this.countTotalFeedback();\n\n    return (\n      <div className=\"App\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions onLeaveFeedback={this.addFeedback} />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.totalFeedback ? (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.totalFeedback}\n              positivePercentage={\n                Math.round(this.countPositiveFeedbackPercentage() * 100) / 100\n              }\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}